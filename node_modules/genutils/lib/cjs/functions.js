Object.defineProperty(exports,"__esModule",{value:!0});const t=t=>"function"==typeof t,r=r=>r&&t(r.next)&&t(r.return)&&t(r.throw)&&t(r[Symbol.iterator]),e=r=>r&&t(r.next)&&t(r.return)&&t(r.throw)&&t(r[Symbol.asyncIterator]);function o(t){if(r(t))return t;if(a(t))return t;if(s(t))return t[Symbol.iterator]();throw new Error(`Not iterable: ${t}`)}const n=t=>{const r=t;let e;return e=async function*(){let o,n=!1;try{for(;;){const t=await Promise.resolve(r.next());if(t.done)return n=!0,t.value;try{o=yield t.value}catch(t){throw await(r.throw?.(t)),t}}}finally{n||await(t.return?.(e.returning))}}()};async function*i(t){const r=t[Symbol.iterator]();let e;for(;;){const t=await r.next(e);if(t.done)return t.value;e=yield t.value}}const a=t=>t&&"function"==typeof t.next,u=t=>t&&"function"==typeof t.next,s=t=>t&&"function"==typeof t[Symbol.iterator],c=t=>t&&"function"==typeof t[Symbol.asyncIterator];exports.doCatch=(t,r)=>(...e)=>{try{return t(...e)}catch(t){return r?.(t)}},exports.isAsyncGenable=t=>t&&(u(t)||c(t)||s(t)),exports.isAsyncGenerator=e,exports.isAsyncIterable=c,exports.isAsyncIterableIterator=t=>u(t)&&c(t),exports.isAsyncIterator=u,exports.isFunction=t,exports.isGenable=t=>t&&(a(t)||s(t)),exports.isGenerator=r,exports.isIterable=s,exports.isIterableIterator=t=>a(t)&&s(t),exports.isIterator=a,exports.toAsyncGenerator=function t(r){if(e(r))return r;if(u(r)){const t=r;async function*o(){for(;;){const r=await t.next();if(r.done)return r.value;yield r.value}}return o()}if(c(r))return t(r[Symbol.asyncIterator]());if(s(r))return t(r[Symbol.iterator]());throw new Error(`Not iterable: ${r}`)},exports.toAsyncIterable=function(t){return c(t)?t:s(t)?i(t):{[Symbol.asyncIterator]:()=>t}},exports.toAsyncIterableIterator=function(t){if(c(t)&&u(t))return t;if(c(t)){let r;const e=()=>r??(r=t[Symbol.asyncIterator]()),o={[Symbol.asyncIterator]:()=>o,next:()=>e().next(),return:e().return&&(t=>e().return(t)),throw:e().throw&&(t=>e().throw(t))};return o}if(s(t))return i(t);if(u(t)){const r={[Symbol.asyncIterator]:()=>r,next:r=>t.next(r),return:t.return&&(r=>t.return(r)),throw:t.throw&&(r=>t.throw(r))};return r}throw new Error(`Not iterator nor iterable: ${t}`)},exports.toAsyncIterator=function(t){if(e(t))return t;if(c(t))return t[Symbol.asyncIterator]();if(s(t))return n(o(t));throw new Error(`Not iterable: ${t}`)},exports.toGenerator=function t(e){if(r(e))return e;if(a(e)){const t=e;function*o(){for(;;){const r=t.next();if(r.done)return r.value;yield r.value}}return o()}if(s(e))return t(e[Symbol.iterator]());throw new Error(`Not iterable: ${e}`)},exports.toIterable=function(t){return s(t)?t:{[Symbol.iterator]:()=>t}},exports.toIterableIterator=function(t){if(s(t)&&a(t))return t;if(s(t)){let r;const e=()=>r??(r=t[Symbol.iterator]()),o={[Symbol.iterator]:()=>o,next:t=>e().next(t),return:e().return&&(t=>e().return(t)),throw:e().throw&&(t=>e().throw(t))};return o}if(a(t)){const r={[Symbol.iterator]:()=>r,next:r=>t.next(r),return:t.return&&(r=>t.return(r)),throw:t.throw&&(r=>t.throw(r))};return r}throw new Error(`Not iterator nor iterable: ${t}`)},exports.toIterator=o;
//# sourceMappingURL=functions.js.map
