var t,e;t=this,e=function(t){const e=t=>"function"==typeof t,r=t=>t&&(u(t)||c(t)),n=t=>t&&e(t.next)&&e(t.return)&&e(t.throw)&&e(t[Symbol.iterator]);function o(t){if(n(t))return t;if(u(t)){const r=t;function*e(){for(;;){const t=r.next();if(t.done)return t.value;yield t.value}}return e()}if(c(t))return o(t[Symbol.iterator]());throw new Error(`Not iterable: ${t}`)}function i(t){if(n(t))return t;if(u(t))return t;if(c(t))return t[Symbol.iterator]();throw new Error(`Not iterable: ${t}`)}function l(t){return c(t)?t:{[Symbol.iterator]:()=>t}}const u=t=>t&&"function"==typeof t.next,c=t=>t&&"function"==typeof t[Symbol.iterator],a=(t,e)=>(...r)=>{try{return t(...r)}catch(t){return e?.(t)}};class f{returning;[Symbol.toStringTag];asArray(){return this._impl.asArray(this)}limit(t){return this._impl.limit(t,this)}forEach(t,e){this._impl.forEach(t,e,this)}map(t,e){return this._impl.map(t,e,this)}filter(t,e){return this._impl.filter(t,e,this)}flat(t=1){return this._impl.flat(t,this)}flatMap(t,e=1){return this._impl.flatMap(t,e,this)}slice(t=0,e=Number.POSITIVE_INFINITY){return this._impl.slice(t,e,this)}concat(...t){return this._impl.concat(this,...t)}reduce(t,e){return this._impl.reduce(t,e,this)}some(t,e){return this._impl.some(t,e,this)}every(t,e){return this._impl.every(t,e,this)}repeatLast(t=Number.POSITIVE_INFINITY){return this._impl.repeatLast(this,t)}repeat(t,e=Number.POSITIVE_INFINITY){const r=this._impl.repeat(t,e);return this._impl.concat(this,r)}zip(...t){return this._impl.zip(this,...t)}join(t){return this._impl.join(this,t)}sort(t){return this._impl.sort(t)(this)}}class s extends f{[Symbol.toStringTag]}const h=new class{of(...t){return this.enhance(t)}asArray(t){return[...l(t)]}limit(t,e){let r;function*n(e){let n,o=!1;try{for(let r=0;r<t;r++){const t=e.next(n);if(t.done)return t.value;try{n=yield t.value}catch(t){e.throw?.(t)}}o=!0;const i=new RangeError(`Generator produced excessive values > ${t}.`);throw e.throw?.(i),i}finally{o||e.return?.(r?.returning)}}return e?r=this.enhance(n(i(e))):t=>this.enhance(n(i(t)))}forEach(t,e,n){const o=(t,e,r)=>{const n=i(r);let o=0;for(;;){const r=n.next();if(r.done)return;t.call(e,r.value,o++)}};return n?o(t,e,n):r(e)?o(t,void 0,e):(r,n)=>o(t,n??e,r)}map(t,e,n){const i=(e,r)=>{const n=o(r);let i;return i=this.enhance(function*(){let r,o=0;for(;;)for(;;)try{for(;;){const i=n.next(r);if(i.done)return i.value;const l=t.call(e,i.value,o++);try{r=yield l}catch(t){n.throw(t)}}}finally{if(!n.return(i?.returning).done)break}}())};return n?i(e,n):r(e)?i(void 0,e):(t,r)=>i(r??e,t)}filter(t,e,n){const i=(e,r)=>{const n=o(r);let i;return i=this.enhance(function*(t){let r,o=0;for(;;)for(;;)try{for(;;){const i=n.next(r);if(i.done)return i.value;if(t.call(e,i.value,o++))try{r=yield i.value}catch(t){n.throw(t)}}}finally{const t=n.return?.(i?.returning);if(!t?.done)break}}(t))};return n?i(e,n):r(e)?i(void 0,e):(t,r)=>i(r??e,t)}flat(t,e){const o=(t,e)=>{let r;const o=new Set;return n(e)&&o.add(e),r=this.enhance(function*t(e,l){let a;for(;;)for(;;)try{for(;;){const r=e.next(a);if(r.done)return r.value;const f=r.value;n(f)&&o.add(f);try{l>0&&u(f)?yield*t(f,l-1):l>0&&c(f)?yield*t(i(f),l-1):a=yield r.value}catch(t){e.throw?.(t)}}}finally{const t=e.return?.(r?.returning);if(n(e)&&o.delete(e),t&&!t.done)break;for(const t of o)t.return(r?.returning)}}(i(e),t))};if("number"==typeof t){if(e){if(r(e))return o(t,e);throw new TypeError(`Invalid Genable: ${e}`)}return e=>o(t,e)}if(r(t))return o(e??1,t);throw new TypeError("Illegal arguments to flat()")}flatMap(t,e,n){const l=(e,r)=>{let n,l=0;return n=this.enhance(function*e(r,a){let f;for(;;)for(;;)try{for(;;){const n=r.next(f);if(n.done)return n.value;const s=t(n.value,l++);try{u(s)?a>1?yield*e(s,a-1):1===a?yield*o(s):yield s:c(s)?a>1?yield*e(i(s),a-1):1===a?yield*o(s):yield s:f=yield s}catch(t){r.throw?.(t)}}}finally{const t=r.return?.(n?.returning);if(t&&!t.done)break}}(i(r),e))};return r(n)?l(e??1,n):r(e)?l(1,e):(t,r)=>l(e??r??1,t)}slice(t,e,r){const n=r=>{const n=i(r);return this.enhance(function*(t,e){for(let e=0;e<t;e++){const t=n.next();if(t.done)return t.value}if(e===Number.POSITIVE_INFINITY)yield*l(n);else{let r;for(;;)try{for(let o=t;o<e;o++){const t=n.next(r);if(t.done)return t.value;try{r=yield t.value}catch(t){const e=n.throw?.(t);if(e){if(e.done)return e.value;r=yield e.value}}}}finally{const t=n.return?.();if(t&&!t.done)break}}}(t,e))};return r?n(r):n}concat(...t){let e;return e=this.enhance(function*(){let r=0;try{for(;r<t.length;r++)yield*l(t[r])}finally{for(;r<t.length;r++){const o=t[r];n(o)&&o.return(e?.returning)}}}())}reduce(t,e,n){const o=(e,r)=>{let n=e;if(void 0===n){const t=r.next();if(t.done)throw new TypeError("No initial value in reduce");n=t.value}for(;;){const e=r.next();if(e.done)return n;n=t(n,e.value)}};return r(n)?o(e,i(n)):r(e)?o(void 0,i(e)):(t,r)=>o(r??e,i(t))}some(t,e,n){const o=(e,r)=>{let n=0;for(;;){const o=r.next();if(o.done)return!1;if(t.call(e,o.value,n++))return!0}};return r(n)?o(e,i(n)):r(e)?o(void 0,i(e)):(t,r)=>o(r??e,i(t))}every(t,e,n){const o=(e,r)=>{let n=0;for(;;){const o=r.next();if(o.done)return!0;if(!t.call(e,o.value,n++))return!1}};if(r(n))return o(e,i(n));if(r(n))return(t,r)=>o(r??e,i(t));throw new Error(`Invalid argument to every: ${n??e}`)}repeatLast(t,e=Number.POSITIVE_INFINITY){const r=i(t);let n,o;return o=this.enhance(function*(){try{let t;for(;;){const e=r.next(n);if(e.done)break;try{n=yield t=e.value}catch(e){const n=r.throw?.(e);if(n){if(n.done)break;yield t=n.value}}}for(let r=0;r<e;r++)yield t}finally{r.return?.(o?.returning)}}())}repeat(t,e=Number.POSITIVE_INFINITY){return this.enhance(function*(){for(let r=0;r<e;r++)yield t}())}zip(...t){if(0===t.length)return this.enhance([]);const e=t.map(i);let r,n=!1;return r=this.enhance(function*(){try{for(;;){let r=[];for(const t of e){const e=t.next();if(e.done)return n=!0,e.value;r.push(e.value)}try{yield r}catch(e){for(const r of t)try{r.throw?.(e)}catch{}throw e}}}finally{if(!n)for(const e of t)try{e.return?.(r?.returning)}catch{}}}())}join(t,e){return"string"==typeof t?(e=t,t=>this.join(t,e)):[...l(t)].join(e)}merge(...t){let e,r=t.map(i);return e=this.enhance(function*(t){let r,n=!1,o=!0;try{for(;o;){o=!1;for(let e=0;e<t.length;e++){const n=t[e];if(n){const i=n.next(r);if(i.done)t[e]=null;else{o=!0;try{r=yield i.value}catch(e){t.forEach(a((t=>t?.throw?.(e))))}}}}}n=!0}finally{n||t.forEach(a((t=>t?.return?.(e?.returning))))}return e?.returning}(r))}sort(t){return(...e)=>this.merge(...e).asArray().sort(t)}enhance(t){const e=o(t),r=Object.getPrototypeOf(e),n=Object.create(s.prototype);return n.return=t=>(e.returning=t,r.return.call(e,t)),n[Symbol.iterator]=()=>e,Object.setPrototypeOf(e,s.prototype),e}},y=Object.getPrototypeOf(function*(){}());Object.setPrototypeOf(s.prototype,(t=>{const e=Object.create(t);return(t=>{for(const r of Reflect.ownKeys(t))"constructor"!==r&&(e[r]=t[r])})(f.prototype),e})(y)),Object.defineProperty(s.prototype,"_impl",{value:h,writable:!1,enumerable:!1,configurable:!1}),t.range=(t=0,e=Number.MAX_SAFE_INTEGER,r=1)=>h.enhance(function*(t=0,e=Number.MAX_SAFE_INTEGER,r=1){let n=t;if(r>0)for(;n<e;)yield n,n+=r;else{if(!(r<0))throw new Error("Step must not be zero.");for(;n>e;)yield n,n+=r}}(t,e,r)),Object.defineProperty(t,"__esModule",{value:!0})},"object"==typeof exports&&"undefined"!=typeof module?e(exports):"function"==typeof define&&define.amd?define(["exports"],e):e((t="undefined"!=typeof globalThis?globalThis:t||self).range={});
//# sourceMappingURL=range.js.map
